package com.example.course_work_cinema.controller;import com.example.course_work_cinema.entity.Movie;import com.example.course_work_cinema.service.MovieService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.propertyeditors.CustomDateEditor;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.validation.BindingResult;import org.springframework.web.bind.WebDataBinder;import org.springframework.web.bind.annotation.InitBinder;import org.springframework.web.bind.annotation.ModelAttribute;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestParam;import javax.validation.Valid;import java.text.SimpleDateFormat;import java.util.Date;import java.util.List;import java.util.Optional;@Controllerpublic class MovieController {    @Autowired    private MovieService movieService;    @RequestMapping("movies")    public String movies(Model model) {        List<Movie> movieList = movieService.findAll();        model.addAttribute("movieList", movieList);        return "movies";    }    @RequestMapping("add-movie")    public String addMovie(@ModelAttribute Movie movie) {        return "add-movie";    }    @RequestMapping("update-movie")    public String updateMovie(Model model, @RequestParam String movieId) {        Optional<Movie> movie = movieService.findById(Integer.parseInt(movieId));        model.addAttribute("movie", movie.get());        return "add-movie";    }    @RequestMapping("delete-movie")    public String deleteMovie(@RequestParam String movieId) {        movieService.deleteById(Integer.parseInt(movieId));        return "redirect:movies";    }    @RequestMapping("process-movie")    public String processMovie(@Valid @ModelAttribute Movie movie, BindingResult bindingResult) {        if(bindingResult.hasErrors()) {            return "add-movie";        }        movieService.save(movie);        return "redirect:movies";    }    @InitBinder    public void initBinder(WebDataBinder binder) {        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd-MM-yyyy");        CustomDateEditor customDateEditor = new CustomDateEditor(simpleDateFormat, true);        binder.registerCustomEditor(Date.class, "showStartDate", customDateEditor);        binder.registerCustomEditor(Date.class, "showEndDate", customDateEditor);    }}